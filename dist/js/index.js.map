{"version":3,"sources":["js/components/flickityInit.ts","js/components/forEachPolyfill.ts","js/components/steps.ts","js/index.ts"],"names":[],"mappings":"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","file":"index.js","sourceRoot":"../src","sourcesContent":["/**\n* Initialize flickity\n*/\n//@ts-nocheck\n\nconst flickityInit = () => {\n  let service = document.querySelector('.home-carousel');\n  let carousel = new Flickity(service, {\n    pageDots: false,\n    freeScroll: true,\n    wrapAround: true,\n  })\n}\n\nexport default flickityInit","/**\n* Foreach polyfill for browsers\n*/\n\nconst foreachPolyfill = () => {\n  if (window.NodeList && !NodeList.prototype.forEach) {\n    NodeList.prototype.forEach = function (callback, thisArg) {\n      thisArg = thisArg || window;\n      for (var i = 0; i < this.length; i++) {\n        callback.call(thisArg, this[i], i, this);\n      }\n    };\n  }\n}\n\nexport default foreachPolyfill","/**\n* script for steps component\n*/\n//@ts-nocheck\n\nconst steps = () => {\n  const stepItem = document.querySelectorAll('.step__item');\n  const stepButton = document.querySelectorAll('.step__indicator');\n  const content = document.querySelectorAll('.step__content');\n  const prevBtn = document.querySelector('.js-prev') as HTMLElement;\n  const nextBtn = document.querySelector('.js-next') as HTMLElement;\n  let increment = 0;\n\n  window.addEventListener('DOMContentLoaded', () => {\n    stepItem[0].classList.add('active');\n    content[0].classList.add('active');\n  })\n\n  nextBtn.onclick = () => {\n    if (increment < stepItem.length - 1) {\n      content[increment].classList.remove('active');\n      increment++;\n      if (increment < stepItem.length) {\n        stepItem[increment].classList.add('active');\n        content[increment].classList.add('active');\n      }\n    } else {\n      return\n      // for (let i = stepItem.length -1; i > 0; i--) {\n      //   stepItem[i].classList.remove('active');\n      //   content[i].classList.remove('active');\n      //   increment = 0;\n      //   content[increment].classList.add('active');\n      // }\n    }\n  }\n\n  prevBtn.onclick = () => {\n    if (increment > 0) {\n      content[increment].classList.remove('active');\n      increment--;\n      stepItem[increment+1].classList.remove('active');\n      content[increment].classList.add('active');\n    } else {\n      return;\n    }\n  }\n\n  for (let x = 0; x < stepButton.length; x++) {\n    stepButton[x].onclick = function() {\n      if (increment > this.value) {\n        do {\n          stepItem[increment].classList.remove('active');\n          content[increment].classList.remove('active');\n          increment--;\n        }\n        while (increment >= this.value)\n      } else {\n        content[increment].classList.remove('active');\n      }\n      stepItem[this.value].classList.add('active');\n      content[this.value].classList.add('active');\n      increment = this.value;\n      for (let v = 0; v < increment; v++) {\n        stepItem[v].classList.add('active');\n      }\n    }\n  }\n}\n\nexport default steps","import flickityInit from './components/flickityInit';\nimport forEachPolyfill from './components/forEachPolyfill';\nimport steps from './components/steps';\n\ndocument.addEventListener(\n  'DOMContentLoaded',\n  () => {\n    forEachPolyfill()\n    flickityInit()\n    steps()\n  },\n  false\n)\n"]}